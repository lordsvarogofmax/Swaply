import logging
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)

# –í–∫–ª—é—á–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
GIVE, WANT = range(2)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–º–µ–Ω–∏!)
BOT_TOKEN = "8341008966:AAHxnL0qaKoyfQSve6lRoopxnjFAS7u8mUg"

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞—è–≤–æ–∫ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äî Google Sheets –∏–ª–∏ –ë–î)
users_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî Swaply, –±–æ—Ç –¥–ª—è —á–µ—Å—Ç–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤–µ—â–∞–º–∏ –±–µ–∑ –¥–µ–Ω–µ–≥.\n\n"
        "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –û–¢–î–ê–¢–¨."
    )
    return GIVE

async def get_give(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    give_text = update.message.text
    users_data[user_id] = {"give": give_text}
    await update.message.reply_text(
        "üîÑ –û—Ç–ª–∏—á–Ω–æ! –ê —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ü–û–õ–£–ß–ò–¢–¨ –≤–∑–∞–º–µ–Ω?\n\n"
        "–ü—Ä–∏–º–µ—Ä: ¬´–î–µ—Ç—Å–∫–∏–π –≤–µ–ª–æ—Å–∏–ø–µ–¥, –¥–æ–ø–ª–∞—á—É 1000 ‚ÇΩ¬ª"
    )
    return WANT

async def get_want(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    want_text = update.message.text
    users_data[user_id]["want"] = want_text

    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É (–∑–∞–º–µ–Ω–∏ YOUR_ADMIN_ID –Ω–∞ —Å–≤–æ–π ID)
    admin_message = (
        f"üÜï –ù–æ–≤—ã–π –æ–±–º–µ–Ω!\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{update.message.from_user.username or '–Ω–µ—Ç username'} (ID: {user_id})\n"
        f"–û—Ç–¥–∞—ë—Ç: {users_data[user_id]['give']}\n"
        f"–•–æ—á–µ—Ç: {users_data[user_id]['want']}"
    )

    YOUR_ADMIN_ID = 364191893  # ‚Üê –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô ID!
    await context.bot.send_message(chat_id=YOUR_ADMIN_ID, text=admin_message)

    await update.message.reply_text(
        "üéâ –°–ø–∞—Å–∏–±–æ! –Ø –ø–µ—Ä–µ–¥–∞–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å.\n"
        "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–π–¥—É –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ–±–º–µ–Ω ‚Äî –Ω–∞–ø–∏—à—É!\n\n"
        "P.S. –•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –æ–±–º–µ–Ω? –ù–∞–ø–∏—à–∏ /start"
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–±–º–µ–Ω –æ—Ç–º–µ–Ω—ë–Ω. –ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
    return ConversationHandler.END

def main():
    application = Application.builder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            GIVE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_give)],
            WANT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_want)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)
    application.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    main()
